import "../main.del";

globalvar Boolean S_ENABLE_SLIDE;
globalvar Number S_SLIDE_JUMP_STRENGTH;
globalvar Number S_SLIDE_SPEED;
playervar Boolean isSliding;
playervar Vector slideThrottle;

// rule: "Record Throttle"
// Event.OngoingPlayer
// if (IsInAir())
// if (ThrottleOf() != Vector())
// if (slideThrottle != ThrottleOf())
// {
//     slideThrottle = ThrottleOf();

//     Wait(0.08);
//     LoopIfConditionIsTrue();
// }


rule: "Slide"
Event.OngoingPlayer
if (S_ENABLE_SLIDE)
if (!isSliding)
if (IsButtonHeld(player, Button.Crouch))
if (IsOnGround() || AltitudeOf() < 0.2)
{
    AbortIf(!IsMoving(player) || !IsButtonHeld(player, Button.Crouch));

    // todo: for some reason this line keeps accelerating the player towards Vector(1, 0, 0) regardless of their movement direction, workshop bug?
    // slideThrottle = Vector(Near(ThrottleOf().X), 0, Near(ThrottleOf().Z));

    if (slideThrottle == Vector())
        slideThrottle = Vector(0, 0, 1);

    isSliding = true;

    DisallowButton(player, Button.Jump);

    PlayEffect(All(), PlayEffect.Soldier76SprintStartSound, null, PosOf(), 65);

    SetGravity(player, 0);

    StartAccelerating(player, Down(), 30, 100, Relative.ToWorld, AccelerateRev.None);
    // StartAccelerating(player, ThrottleOf(), S_SLIDE_SPEED / 2, 100, Relative.ToWorld, AccelerateRev.DirectionRateAndMaxSpeed);
    ApplyImpulse(player, Vector(Near(ThrottleOf().X), 0, Near(ThrottleOf().Z)), S_SLIDE_SPEED, Relative.ToPlayer, ContraryMotion.Incorporate);

    WaitUntil(!IsButtonHeld(player, Button.Crouch) || HorizontalSpeedOf() < (minSpeed), 999999);
    
    AllowButton(player, Button.Jump);

    isSliding = false;

    SetGravity(player, 100);
    StopAccelerating();

    Wait(0.5);
}

rule: "Slide Effect"
Event.OngoingPlayer
if (isSliding)
{
    slideThrottle = Vector(Near(ThrottleOf().X), 0, Near(ThrottleOf().Z));

    if (slideThrottle == Vector())
        slideThrottle = Vector(0, 0, 1);

    if (HorizontalSpeedOf() > 4)
    {
        PlayEffect(All(), PlayEffect.BadExplosion, Color.Orange, PosOf(), 0.2);
        PlayEffect(All(), PlayEffect.Soldier76SprintStartSound, Color.Gray, PosOf(), 15);
    }

    Wait(0.032);
    LoopIfConditionIsTrue();
}