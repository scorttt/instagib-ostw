import "../main.del";

globalvar Boolean S_JETPACK_ENABLED; // setting: jetpack enabled
playervar Boolean canFly; // whether the player pressed space again in mid air
playervar Boolean isFlying; // if the player is using jetpack

disabled rule: "---------------- Jetpack ----------------"{}

// super hacky but it works, since jump is already being used by auto hopping this is the only solution i can think of, may need to figure something else out
rule: "[Jetpack] :: Jump In Mid Air Detection"
Event.OngoingPlayer
if (IsInAir())
{
    canFly = false;
    WaitUntil(Update(!IsJumpHeld()), 99999);
    canFly = true;
}

void StartJetpack() playervar "[Jetpack] :: Start Sub"
{   
    isFlying = true;

    if (!isHovering)
    {
        isDodging = false;

        if (!infFuel)
            fuel -= 0.02;

        StartAccelerating(
            player,
            Up(),
            7,
            10000,
        Relative.ToPlayer,
        AccelerateRev.DirectionRateAndMaxSpeed);

        SetGravity(player, 0);
    }
    else if (IsAbility1Held())
    {
        StartAccelerating(
            player, 
            hoverDir, 
            bhopSpeedRate, 
            S_BHOP_MAX_SPEED, 
        Relative.ToPlayer, 
        AccelerateRev.None);

        SetGravity(player, 0);
        ForceThrottle(player, 0, 0, 0, 0, 0, 0);
        DisallowButton(player, Button.Jump);
        DisallowButton(player, Button.Crouch);

        ApplyImpulse(player, Up(), 0.0001);
        ApplyImpulse(player, Down(), 0.0001);
    }
    

    while (isFlying || isHovering)
    {
        if (!infFuel)
        {
            if (!isHovering)
                SubtractOverTime(fuel, S_FUEL_DEP, 0, 1, 0.016);
            else 
                SubtractOverTime(fuel, S_FUEL_DEP * 1.5, 0, 1, 0.016); // hovering uses less fuel
        }

        
        PlayEffect(All(), PlayEffect.BadExplosion, Color.Orange, PositionOf(), 0.1);

        if (fuel == 0 || (!IsAbility1Held() && isHovering))
        {
            StopJetpack();
            break;
        }

        MinWait();
    }
}

rule: "[Jetpack] :: General Jetpack Start"
Event.OngoingPlayer
if (S_JETPACK_ENABLED)
if (canFly)
if (fuel > 0)
if (!isHovering)
if (AltitudeOf() > 1)
if (Update(IsJumpHeld()))
if (IsAlive())
{
    StopJetpack();
    StartJetpack();
}

rule: "[Jetpack] :: Stop"
Event.OngoingPlayer
if (Update(!IsJumpHeld() || fuel <= 0))
if (isFlying)
if (!isHovering)
{
    StopJetpack();
}

rule: "[Jetpack] :: Stop Jetpack if Fuel Depletes"
Event.OngoingPlayer
if (IsInAir())
if (IsJumpHeld())
if (fuel == 0)
{
    StopJetpack();
}

void StopJetpack() playervar "[Jetpack] :: Stop Sub"
{
    if (IsOnGround())
        canFly = false;

    isFlying = false;
    isHovering = false;
    StopAccelerating();
    StopForcingThrottle();
    SetGravity(player, 100);
    AllowButton(player, Button.Jump);
    AllowButton(player, Button.Crouch);
}