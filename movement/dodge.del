import "../main.del";

globalvar Number S_DODGE_FORCE;
globalvar Boolean S_DODGE_ENABLED;
playervar Boolean isDodging;
playervar Vector throttle;
playervar Number dodgeForce;

disabled rule: "---------------- Dodge ----------------"{}

rule: "[Dodge] :: Init"
Event.OnPlayerJoin
{
    dodgeForce = S_DODGE_FORCE;
}

Number y: 0.6;
rule: "[Dodge] :: Action"
Event.OngoingPlayer
if (S_DODGE_ENABLED)
if (fuel > 0.26)
if (IsAlive())
if (IsButtonHeld(player, Button.Ability1))
{
    isDodging = true;

    if (!infFuel)
        fuel -= 0.3;

    // hacky fix for controller users
    throttle = Vector(Near(ThrottleOf().X), y, Near(ThrottleOf().Z));

    if (throttle == Vector(0, y, 0))
    {
        throttle = Vector(0, y, 0);
        dodgeForce /= 2;
    }

    ApplyImpulse(player, throttle, dodgeForce, Relative.ToPlayer, ContraryMotion.Cancel);

    if (equippedAbility != Ability.Stimpack || !usingAbility)
        dodgeForce = S_DODGE_FORCE;
    else
        dodgeForce = S_DODGE_FORCE * 1.3;

    PlayEffect(All(), PlayEffect.BadExplosion, Color.Orange, PositionOf(), 1);
    PlayEffect(All(), PlayEffect.RingExplosion, Color.Orange, PositionOf(), 2);
    PlayEffect(All(), PlayEffect.DvaMicroMissilesExplosionSound, Color.White, PositionOf(), 100);

    Wait(0.15); // small cooldown
}

rule: "[Dodge] :: Is Not Dodging"
Event.OngoingPlayer
if (Update(IsOnGround() || AltitudeOf() < 0.01))
{
    isDodging = false;
}

playervar Boolean isHovering;
playervar Vector hoverDir;
playervar Number hoverMaxY;
playervar Number hoverMinY;
rule: "[Hover] :: Start Hover"
Event.OngoingPlayer
if (IsInAir())
if (isDodging)
if (!isHovering)
if (fuel > 0)
if (IsAbility1Held())
{
    WaitIfTrue(0.4);

    if (throttle != Vector(0, y, 0))
        hoverDir = throttle - Vector(0, y, 0);
    else
        hoverDir = Vector(0, 0, 1); 

    hoverMaxY = PositionOf().Y + 0.1;
    hoverMinY = PositionOf().Y - 0.1;

    isHovering = true;

    StartJetpack();
}

rule: "[Hover] :: Stop Hover"
Event.OngoingPlayer
if (fuel <= 0 || 
    !bhopping ||
    HorizontalSpeedOf() < MIN_SPEED ||
    !IsAbility1Held() ||
    !IsInRange(PositionOf().Y, hoverMinY, hoverMaxY))
{
    StopJetpack();
}