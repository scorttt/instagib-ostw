
import "../main.del";
globalvar Number S_FUEL_DEP; // setting: fuel depletion rate
globalvar Number S_FUEL_REF; // setting: fuel refill rate
playervar Number fuel; // amount of fuel remaining
playervar Boolean infFuel; // if the player has infinite fuel
playervar Number fuelReplenishFlashStartTime;
playervar Number fuelReplenishFlashTriggered;

playervar Boolean fuelDepletionFlashStartTime;
playervar Boolean fuelDepletionFlashTriggered;

rule: "[Fuel] :: Replenish Fuel When Not In Use"
Event.OngoingPlayer
if (fuel < 1)
if (Update(IsOnGround() || AltitudeOf() < 0.01))
{
    if (fuel < 0)
        fuel = 0;

    WaitIfTrue(0.048);
    fuelReplenishFlashStartTime = 0;
    isDodging = false;
    fuelDepletionFlashTriggered = false;
    fuelReplenishFlashTriggered = false;

    while (fuel < 1)
    {
        if (Update(isFlying || (isDodging && dodgeFuelCost > 0)))
            break;

        // AddOverTime(fuel, S_FUEL_REF / (1.15 - fuel), 0, 1, 0.016);
        AddOverTime(fuel, S_FUEL_REF, 0, 1, 0.016);

        MinWait();
    }

    if (fuel == 1)
    {
        fuelReplenishFlashStartTime = Time();
        fuelReplenishFlashTriggered = true;
    }
}

rule: "[Fuel] :: Clamp Fuel"
Event.OngoingPlayer
if (Update(fuel > 1 || fuel < 0))
{
    // probably a better way to clamp the fuel but i dont care
    if (fuel > 1)
        fuel = 1;
    else if (fuel < 0)
        fuel = 0;
}